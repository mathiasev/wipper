// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = env("DATABASE_PROVIDER"),
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url = env("DATABASE_URL")
}

model User {
    id String @id

    Organisation   Organisation? @relation(fields: [organisationId], references: [id])
    organisationId String?
}

model Organisation {
    id String @id @default(cuid())

    name String? @default("Default Organisation")

    users User[]
}

model Company {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    deletedAt   DateTime?
    createdById String

    name String

    contacts Contact[]
    projects Project[]

    @@index([name])
}

model Contact {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    deletedAt   DateTime?
    createdById String

    name  String
    email String

    companyId String
    Company   Company @relation(fields: [companyId], references: [id])
}

model Project {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    deletedAt   DateTime?
    createdById String

    name        String
    description String
    startDate   DateTime?
    dueDate     DateTime?

    updates ProjectUpdate[]

    companyId String
    Company   Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

    @@index([companyId, id])
}

model ProjectUpdate {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    deletedAt   DateTime?
    createdById String

    updateBody String
    internal   Boolean @default(false)
    notify     Boolean @default(true)

    Project   Project @relation(fields: [projectId], references: [id])
    projectId String

    @@index([projectId, id])
}
